<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                template="vercel.xhtml">

    <ui:define name="content">
        <h:form id="formPicksAndBans">

            

            <!-- Header -->
            <div class="glass-card mb-4 p-4">
                <div class="flex justify-content-between align-items-center flex-wrap gap-3">
                    <div class="flex-1">
                        <div class="flex align-items-center mb-2">
                            <i class="pi pi-map mr-3" style="font-size: 2rem; color: var(--accent);"></i>
                            <h1 class="m-0" style="font-weight: 700; font-size: 2rem; color: var(--text-100);">Picks <h:outputText value="&amp;" escape="false" /> Bans</h1>
                        </div>
                        <p class="m-0" style="color: var(--text-300); font-size: 1rem;">Sistema de seleção e banimento de mapas</p>
                    </div>
                    <div class="flex gap-2">
                        <p:commandButton value="Sortear Início"
                                         icon="pi pi-refresh"
                                         styleClass="action-btn"
                                         update="@form"
                                         oncomplete="PF('coinFlipDialog').show();"
                                         rendered="#{empty managerPartida.timeIniciante}" />

                        <p:commandButton value="Cancelar"
                                         icon="pi pi-times"
                                         styleClass="action-btn outlined"
                                         actionListener="#{managerPartida.retornarPartida()}"
                                         update="@form" />

                        <p:commandButton value="Finalizar"
                                         icon="pi pi-check"
                                         styleClass="action-btn success"
                                         actionListener="#{managerPartida.finalizarPicks()}"
                                         update="@form" />
                    </div>
                </div>

                <!-- Info do Time Iniciante -->
                <h:panelGroup rendered="#{not empty managerPartida.timeIniciante}">
                    <div class="mt-3 p-3" style="background: rgba(0,225,255,0.08); border: 1px solid rgba(0,225,255,0.25); border-radius: var(--radius);">
                        <div class="flex align-items-center gap-2">
                            <i class="pi pi-star-fill" style="color: var(--accent-2);"></i>
                            <span class="font-semibold" style="color: var(--text-300);">Time Iniciante:</span>
                            <span class="font-bold" style="color: var(--accent);">#{managerPartida.timeIniciante.nome}</span>
                        </div>
                    </div>
                </h:panelGroup>
            </div>

            <!-- Grid Principal -->
            <div class="grid">
                <!-- Coluna 1: Mapas Disponíveis -->
                <div class="col-12 lg:col-4">
                    <div class="glass-card p-4 h-full">
                        <h2 class="mb-4 flex align-items-center" style="font-weight: 700; font-size: 1.25rem; color: var(--text-100);">
                            <i class="pi pi-list mr-2" style="color: var(--accent);"></i>Mapas Disponíveis
                        </h2>

                        <div class="overflow-auto" style="max-height: calc(70vh - 80px);">
                            <ui:repeat value="#{managerPartida.mapas}" var="mapa">
                                <div class="mb-3 overflow-hidden hover-scale border-round"
                                     style="border: 1px solid var(--border);">
                                    <div class="relative">
                                        <h:graphicImage value="image/#{mapa.anexo.nome}" 
                                                        styleClass="w-full"
                                                        style="height: 120px; object-fit: cover;" />
                                        <div class="absolute bottom-0 left-0 right-0 p-2"
                                             style="background: rgba(0,0,0,0.7);">
                                            <span class="text-white font-bold">#{mapa.nome}</span>
                                        </div>
                                    </div>
                                </div>
                            </ui:repeat>
                        </div>
                    </div>
                </div>

                <!-- Coluna 2: Sequência de Picks & Bans -->
                <div class="col-12 lg:col-4">
                    <div class="glass-card p-4 h-full">
                        <h2 class="mb-4 flex align-items-center" style="font-weight: 700; font-size: 1.25rem; color: var(--text-100);">
                            <i class="pi pi-sort-alt mr-2" style="color: var(--accent);"></i>Sequência
                        </h2>

                        <div class="overflow-auto" style="max-height: calc(70vh - 80px);">
                            <ui:repeat value="#{managerPartida.pickBanVo}" var="pb" varStatus="status">
                                <div class="mb-3">
                                    <div class="p-3 border-round"
                                         style="background: #{pb.tipoPickBan.nome eq 'BAN' ? 'rgba(239,68,68,0.12)' : 'rgba(34,197,94,0.12)'}; border: 2px solid #{pb.tipoPickBan.nome eq 'BAN' ? 'rgba(239,68,68,0.25)' : 'rgba(34,197,94,0.25)'};">
                                        <!-- Header do Card -->
                                        <div class="flex justify-content-between align-items-center mb-2">
                                            <div class="flex align-items-center gap-2">
                                                <span class="text-xs font-semibold px-2 py-1 border-round"
                                                      style="background: rgba(255,255,255,0.08); color: var(--text-300);">
                                                    #{status.index + 1}
                                                </span>
                                                <div class="participant-avatar-dark" style="width: 30px; height: 30px; font-size: 12px; margin: 0;">
                                                    #{pb.team.nome.substring(0,1)}
                                                </div>
                                                <span class="font-bold" style="color: var(--text-100);">#{pb.team.nome}</span>
                                            </div>
                                            <span class="font-bold" style="color: #{pb.tipoPickBan.nome eq 'BAN' ? '#f87171' : '#22c55e'};">
                                                #{pb.tipoPickBan.nome}
                                            </span>
                                        </div>

                                        <!-- Mapa Selecionado ou Botão -->
                                        <h:panelGroup rendered="#{pb.mapas != null}">
                                            <div class="flex align-items-center gap-2 mt-2">
                                                <h:graphicImage value="image/#{pb.mapas.anexo.nome}" 
                                                                style="height: 50px; width: 100px; object-fit: cover; border-radius: 8px; border: 1px solid var(--border);" />
                                                <span class="font-semibold" style="color: var(--text-100);">#{pb.mapas.nome}</span>
                                            </div>
                                        </h:panelGroup>

                                        <h:panelGroup rendered="#{pb.mapas == null}">
                                            <p:commandButton value="Selecionar Mapa"
                                                             icon="pi pi-map-marker"
                                                             styleClass="action-btn w-full mt-2"
                                                             update="@form"
                                                             oncomplete="PF('gerarMapasDialog').show();">
                                                <f:setPropertyActionListener value="#{pb}"
                                                                             target="#{managerPartida.pbItem}" />
                                            </p:commandButton>
                                        </h:panelGroup>
                                    </div>
                                </div>
                            </ui:repeat>
                        </div>
                    </div>
                </div>

                <!-- Coluna 3: Mapas Escolhidos -->
                <div class="col-12 lg:col-4">
                    <div class="glass-card p-4 h-full">
                        <h2 class="mb-4 flex align-items-center" style="font-weight: 700; font-size: 1.25rem; color: var(--text-100);">
                            <i class="pi pi-check-circle mr-2" style="color: var(--success);"></i>Mapas Escolhidos
                        </h2>

                        <div class="overflow-auto" style="max-height: calc(70vh - 80px);">
                            <h:panelGroup rendered="#{empty managerPartida.pickedMaps}">
                                <div class="text-center py-6">
                                    <i class="pi pi-inbox mb-3" style="font-size: 4rem; color: var(--muted);"></i>
                                    <p class="m-0" style="color: var(--text-300);">Nenhum mapa escolhido ainda</p>
                                </div>
                            </h:panelGroup>

                            <ui:repeat value="#{managerPartida.pickedMaps}" var="mapa">
                                <div class="mb-3 overflow-hidden border-round"
                                     style="border: 2px solid rgba(0,225,255,0.35);">
                                    <div class="relative">
                                        <h:graphicImage value="image/#{mapa.anexo.nome}" 
                                                        styleClass="w-full"
                                                        style="height: 140px; object-fit: cover;" />
                                        <div class="absolute bottom-0 left-0 right-0 p-3"
                                             style="background: rgba(0,0,0,0.8);">
                                            <div class="flex justify-content-between align-items-center">
                                                <span class="text-white font-bold" style="font-size: 1.125rem;">#{mapa.nome}</span>
                                                <i class="pi pi-check-circle text-2xl" style="color: var(--success);"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </ui:repeat>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Dialog: Cara ou Coroa -->
            <p:dialog id="coinFlipDialog"
                      widgetVar="coinFlipDialog"
                      header="Sortear Time Iniciante"
                      modal="true"
                      resizable="false"
                      draggable="false"
                      closeOnEscape="false"
                      closable="false"
                      showEffect="fade"
                      hideEffect="fade"
                      width="500">

                <div class="text-center py-4">
                    <h3 class="mb-4" style="font-weight: 700; color: var(--text-100);">Qual time começa?</h3>

                    <!-- Moeda Animada -->
                    <div class="coin-container mb-4">
                        <div id="coin" class="coin">
                            <div class="coin-face coin-heads" data-team="team1">
                                <div class="participant-avatar-dark mx-auto" style="width: 100px; height: 100px; font-size: 40px;">
                                    #{managerPartida.itensPartidas.get(0).team1.nome.substring(0,1)}
                                </div>
                                <div class="mt-2 font-bold" style="color: white;">#{managerPartida.itensPartidas.get(0).team1.nome}</div>
                            </div>
                            <div class="coin-face coin-tails" data-team="team2">
                                <div class="participant-avatar-dark mx-auto" style="width: 100px; height: 100px; font-size: 40px;">
                                    #{managerPartida.itensPartidas.get(0).team2.nome.substring(0,1)}
                                </div>
                                <div class="mt-2 font-bold" style="color: white;">#{managerPartida.itensPartidas.get(0).team2.nome}</div>
                            </div>
                        </div>
                    </div>

                    <h:panelGroup id="resultadoSorteio" styleClass="resultado-sorteio">
                        <h:panelGroup rendered="#{not empty managerPartida.timeIniciante}">
                            <div class="border-round p-4 mb-3"
                                 style="background: rgba(34,197,94,0.12); border: 2px solid rgba(34,197,94,0.25);">
                                <i class="pi pi-trophy text-4xl mb-2" style="color: var(--accent-2);"></i>
                                <h3 class="font-bold m-0" style="color: var(--success);">
                                    #{managerPartida.timeIniciante.nome} começa!
                                </h3>
                            </div>
                        </h:panelGroup>
                    </h:panelGroup>

                    <!-- Botões -->
                    <h:panelGroup id="botoesContainer">
                        <div class="flex justify-content-center gap-2 mt-4">
                            <p:commandButton id="btnSortear"
                                             value="Sortear"
                                             icon="pi pi-refresh"
                                             styleClass="action-btn"
                                             onclick="flipCoin(); return false;"
                                             rendered="#{managerPartida.timeIniciante.id eq null}" />

                            <!-- Botões ocultos para chamar o método do servidor com cada time -->
                            <p:commandButton id="btnSortearTeam1"
                                             style="display: none;"
                                             actionListener="#{managerPartida.sortearTimeIniciante(managerPartida.itensPartidas.get(0).team1)}"
                                             update="resultadoSorteio botoesContainer @(.info-time-iniciante)"
                                             oncomplete="showResult();" />

                            <p:commandButton id="btnSortearTeam2"
                                             style="display: none;"
                                             actionListener="#{managerPartida.sortearTimeIniciante(managerPartida.itensPartidas.get(0).team2)}"
                                             update="resultadoSorteio botoesContainer @(.info-time-iniciante)"
                                             oncomplete="showResult();" />

                            <p:commandButton value="Continuar"
                                             id="continuarButton"
                                             icon="pi pi-arrow-right"
                                             styleClass="action-btn success"
                                             update="@form"
                                             oncomplete="PF('coinFlipDialog').hide();"
                                             rendered="#{managerPartida.timeIniciante.id ne null}" />
                        </div>
                    </h:panelGroup>
                </div>
            </p:dialog>

            <!-- Dialog: Selecionar Mapa -->
            <p:dialog id="gerarMapasDialog"
                      widgetVar="gerarMapasDialog"
                      header="Selecionar Mapa"
                      modal="true"
                      resizable="false"
                      draggable="false"
                      closeOnEscape="true"
                      showEffect="fade"
                      hideEffect="fade"
                      width="900"
                      height="600">

                <div class="text-center mb-4">
                    <h3 class="font-bold" style="color: var(--text-100);">
                        #{managerPartida.pbItem.team.nome} - #{managerPartida.pbItem.tipoPickBan.nome}
                    </h3>
                </div>

                <div class="grid" style="max-height: 500px; overflow-y: auto;">
                    <ui:repeat value="#{managerPartida.mapas}" var="mapa">
                        <div class="col-12 md:col-6 lg:col-4">
                            <p:commandButton styleClass="p-0 w-full border-0 bg-transparent"
                                             actionListener="#{managerPartida.pickarMapa(mapa)}"
                                             update="@form"
                                             oncomplete="PF('gerarMapasDialog').hide();">
                                <div class="map-card">
                                    <div class="relative overflow-hidden border-round hover-scale">
                                        <h:graphicImage value="image/#{mapa.anexo.nome}" 
                                                        styleClass="w-full"
                                                        style="height: 180px; object-fit: cover;" />
                                        <div class="absolute bottom-0 left-0 right-0 p-3"
                                             style="background: rgba(0,0,0,0.8);">
                                            <span class="text-white font-bold text-xl">#{mapa.nome}</span>
                                        </div>
                                        <div class="map-overlay">
                                            <i class="pi pi-check-circle text-white text-6xl"></i>
                                        </div>
                                    </div>
                                </div>
                            </p:commandButton>
                        </div>
                    </ui:repeat>
                </div>
            </p:dialog>

        </h:form>

        <style>
            .participant-avatar-dark {
                border-radius: 50%;
                background: rgba(255,255,255,0.08);
                border: 1px solid rgba(255,255,255,0.12);
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                color: var(--text-100);
            }

            .hover-scale {
                transition: transform 0.2s ease, box-shadow 0.2s ease;
            }

            .hover-scale:hover {
                transform: scale(1.02);
                box-shadow: 0 8px 20px rgba(0,0,0,0.4);
            }
            
            /* Action buttons - tema dark */
            .action-btn {
                background: rgba(0,225,255,0.1) !important;
                border: 1px solid rgba(0,225,255,0.35) !important;
                color: var(--text-100) !important;
                transition: all 0.2s ease;
            }
            
            .action-btn:hover {
                background: rgba(0,225,255,0.15) !important;
                box-shadow: 0 0 0 1px rgba(0,225,255,0.2), 0 0 22px rgba(0,225,255,0.08);
            }
            
            .action-btn.outlined {
                background: transparent !important;
                border-color: rgba(255,255,255,0.2) !important;
            }
            
            .action-btn.outlined:hover {
                background: rgba(255,255,255,0.04) !important;
            }
            
            .action-btn.success {
                background: rgba(34,197,94,0.15) !important;
                border-color: rgba(34,197,94,0.35) !important;
                color: var(--success) !important;
            }
            
            .action-btn.success:hover {
                background: rgba(34,197,94,0.2) !important;
                box-shadow: 0 0 0 1px rgba(34,197,94,0.2), 0 0 22px rgba(34,197,94,0.08);
            }

            /* Animação da Moeda */
            .coin-container {
                perspective: 1000px;
                min-height: 200px;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .coin {
                width: 150px;
                height: 150px;
                position: relative;
                transform-style: preserve-3d;
                transition: transform 2s;
            }

            .coin-face {
                position: absolute;
                width: 100%;
                height: 100%;
                backface-visibility: hidden;
                border-radius: 50%;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                padding: 20px;
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }

            .coin-heads {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
            }

            .coin-tails {
                background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
                color: white;
                transform: rotateY(180deg);
            }

            .coin.flip {
                animation: flip 2s ease-in-out;
            }

            @keyframes flip {
                0% {
                    transform: rotateY(0deg);
                }
                100% {
                    transform: rotateY(1800deg);
                }
            }

            /* Mapa Card com Overlay */
            .map-card {
                position: relative;
                cursor: pointer;
            }

            .map-overlay {
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: rgba(0, 225, 255, 0.85);
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0;
                transition: opacity 0.3s ease;
                border-radius: 8px;
            }

            .map-card:hover .map-overlay {
                opacity: 1;
            }
            
            /* Forçar estilos dark nos dialogs */
            .ui-dialog,
            .ui-dialog-content,
            .ui-dialog-titlebar {
                background: linear-gradient(180deg, var(--bg-800), var(--bg-900)) !important;
                color: var(--text-100) !important;
            }
            
            .ui-dialog-titlebar {
                border-bottom: 1px solid var(--border) !important;
            }
            
            .ui-dialog-titlebar-icon {
                color: var(--text-300) !important;
            }
            
            .ui-dialog-titlebar-icon:hover {
                background: rgba(255,255,255,0.06) !important;
                color: var(--text-100) !important;
            }

            /* Responsividade */
            @media (max-width: 992px) {
                .grid > div {
                    margin-bottom: 1rem;
                }
            }
        </style>

        <script type="text/javascript">
            //<![CDATA[
            function flipCoin() {
                var coin = document.getElementById('coin');
                coin.classList.add('flip');

                // Sorteia qual time vence (0 = team1, 1 = team2)
                var winner = Math.random() < 0.5 ? 0 : 1;

                // Após a animação de 2 segundos
                setTimeout(function () {
                    coin.classList.remove('flip');

                    // Define a rotação final baseada no vencedor
                    var rotation = winner === 0 ? 0 : 180;
                    coin.style.transform = 'rotateY(' + rotation + 'deg)';

                    // Aguarda mais 500ms para a moeda parar completamente
                    setTimeout(function () {
                        // Clica no botão correspondente ao time vencedor
                        if (winner === 0) {
                            document.getElementById('formPicksAndBans:btnSortearTeam1').click();
                        } else {
                            document.getElementById('formPicksAndBans:btnSortearTeam2').click();
                        }
                    }, 500);
                }, 2000);
            }

            function showResult() {
                // Função chamada após o servidor processar o resultado
                // Pode adicionar efeitos visuais adicionais aqui se necessário
                console.log('Time iniciante definido com sucesso!');
            }
            //]]>
        </script>
    </ui:define>
</ui:composition>